// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  stores Store[]
  Order  Order[]

  @@map("users")
}

model Store {
  id       String  @id @default(uuid())
  name     String
  email    String?
  currency String
  notes    String?
  address  String?
  photoUrl String?

  user   User   @relation(fields: [userId], references: [id])
  userId String

  menuCategories MenuCategory[]
  Order          Order[]

  @@map("stores")
}

model MenuCategory {
  id       String  @id @default(uuid())
  name     String
  disabled Boolean

  storeId String
  store   Store  @relation(fields: [storeId], references: [id])

  menuItems MenuItem[]

  @@map("menu_categories")
}

model MenuItem {
  id          String   @id @default(uuid())
  name        String
  price       Int
  description String?
  notes       String?
  imageUrl    String?
  hasPromo    Boolean?
  available   Boolean?

  menuCategory   MenuCategory @relation(fields: [menuCategoryId], references: [id])
  menuCategoryId String
  orderItems     OrderItems[]

  @@map("menu_items")
}

model Order {
  id     String      @id @default(uuid())
  status OrderStatus @default(pending)
  code   String

  orderUserId String
  orderUser   User   @relation(fields: [orderUserId], references: [id])

  orderStore   Store        @relation(fields: [orderStoreId], references: [id])
  orderStoreId String
  orderItems   OrderItems[]
}

model OrderItems {
  id String @id @default(uuid())

  orderItemsOrderId String
  orderItemsOrder   Order  @relation(fields: [orderItemsOrderId], references: [id])

  orderItemsMenuItem   MenuItem        @relation(fields: [orderItemsMenuItemId], references: [id])
  orderItemsMenuItemId String
  status               OrderItemStatus @default(placed)
  notes                String?
  quantity             Int             @default(1)

  @@map("order_items")
}

enum OrderItemStatus {
  placed
  confirmed
  preparing
  ready_for_deliver
  delivered
  cancelled
  delayed
  problem
  completed
}

enum OrderStatus {
  pending
  in_progress
  ready_for_deliver_or_pickup
  out_for_deliver
  completed
  cancelled
  delayed
  problem
}
